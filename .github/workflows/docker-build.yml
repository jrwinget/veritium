name: Docker Build

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'docker-compose.yml'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'docker-compose.yml'
      - '.github/workflows/docker-build.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ matrix.service }}-

    - name: Build ${{ matrix.service }} image
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.service }}
        push: false
        tags: veritium-${{ matrix.service }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Test ${{ matrix.service }} container
      run: |
        if [ "${{ matrix.service }}" = "backend" ]; then
          docker run --rm -d --name test-backend -p 8000:8000 \
            -e DATABASE_URL="sqlite:///:memory:" \
            -e ENVIRONMENT=test \
            veritium-backend:latest
          sleep 10
          curl -f http://localhost:8000/health || exit 1
          docker stop test-backend
        elif [ "${{ matrix.service }}" = "frontend" ]; then
          docker run --rm -d --name test-frontend -p 3000:3000 \
            veritium-frontend:latest &
          sleep 15
          # Check if container is running
          docker ps | grep test-frontend || exit 1
          docker stop test-frontend || true
        fi

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  integration-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Test docker-compose build
      run: |
        docker-compose build

    - name: Test docker-compose up
      run: |
        docker-compose up -d
        sleep 30

        # Test backend
        curl -f http://localhost:8000/health || exit 1

        # Cleanup
        docker-compose down